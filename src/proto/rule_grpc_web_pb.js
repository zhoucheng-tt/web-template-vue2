/**
 * @fileoverview gRPC-Web generated client stub for api.billingrule.v1
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.1
// 	protoc              v3.21.9
// source: rule.proto


/* eslint-disable */
// @ts-nocheck



const grpc = {};
grpc.web = require('grpc-web');

const proto = {};
proto.api = {};
proto.api.billingrule = {};
proto.api.billingrule.v1 = require('./rule_pb.js');

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.api.billingrule.v1.RuleClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.api.billingrule.v1.RulePromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.api.billingrule.v1.CreateRuleRequest,
 *   !proto.api.billingrule.v1.CreateRuleReply>}
 */
const methodDescriptor_Rule_CreateRule = new grpc.web.MethodDescriptor(
  '/api.billingrule.v1.Rule/CreateRule',
  grpc.web.MethodType.UNARY,
  proto.api.billingrule.v1.CreateRuleRequest,
  proto.api.billingrule.v1.CreateRuleReply,
  /**
   * @param {!proto.api.billingrule.v1.CreateRuleRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.api.billingrule.v1.CreateRuleReply.deserializeBinary
);


/**
 * @param {!proto.api.billingrule.v1.CreateRuleRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.api.billingrule.v1.CreateRuleReply)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.api.billingrule.v1.CreateRuleReply>|undefined}
 *     The XHR Node Readable Stream
 */
proto.api.billingrule.v1.RuleClient.prototype.createRule =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/api.billingrule.v1.Rule/CreateRule',
      request,
      metadata || {},
      methodDescriptor_Rule_CreateRule,
      callback);
};


/**
 * @param {!proto.api.billingrule.v1.CreateRuleRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.api.billingrule.v1.CreateRuleReply>}
 *     Promise that resolves to the response
 */
proto.api.billingrule.v1.RulePromiseClient.prototype.createRule =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/api.billingrule.v1.Rule/CreateRule',
      request,
      metadata || {},
      methodDescriptor_Rule_CreateRule);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.api.billingrule.v1.UpdateRuleRequest,
 *   !proto.api.billingrule.v1.UpdateRuleReply>}
 */
const methodDescriptor_Rule_UpdateRule = new grpc.web.MethodDescriptor(
  '/api.billingrule.v1.Rule/UpdateRule',
  grpc.web.MethodType.UNARY,
  proto.api.billingrule.v1.UpdateRuleRequest,
  proto.api.billingrule.v1.UpdateRuleReply,
  /**
   * @param {!proto.api.billingrule.v1.UpdateRuleRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.api.billingrule.v1.UpdateRuleReply.deserializeBinary
);


/**
 * @param {!proto.api.billingrule.v1.UpdateRuleRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.api.billingrule.v1.UpdateRuleReply)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.api.billingrule.v1.UpdateRuleReply>|undefined}
 *     The XHR Node Readable Stream
 */
proto.api.billingrule.v1.RuleClient.prototype.updateRule =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/api.billingrule.v1.Rule/UpdateRule',
      request,
      metadata || {},
      methodDescriptor_Rule_UpdateRule,
      callback);
};


/**
 * @param {!proto.api.billingrule.v1.UpdateRuleRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.api.billingrule.v1.UpdateRuleReply>}
 *     Promise that resolves to the response
 */
proto.api.billingrule.v1.RulePromiseClient.prototype.updateRule =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/api.billingrule.v1.Rule/UpdateRule',
      request,
      metadata || {},
      methodDescriptor_Rule_UpdateRule);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.api.billingrule.v1.DeleteRuleRequest,
 *   !proto.api.billingrule.v1.DeleteRuleReply>}
 */
const methodDescriptor_Rule_DeleteRule = new grpc.web.MethodDescriptor(
  '/api.billingrule.v1.Rule/DeleteRule',
  grpc.web.MethodType.UNARY,
  proto.api.billingrule.v1.DeleteRuleRequest,
  proto.api.billingrule.v1.DeleteRuleReply,
  /**
   * @param {!proto.api.billingrule.v1.DeleteRuleRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.api.billingrule.v1.DeleteRuleReply.deserializeBinary
);


/**
 * @param {!proto.api.billingrule.v1.DeleteRuleRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.api.billingrule.v1.DeleteRuleReply)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.api.billingrule.v1.DeleteRuleReply>|undefined}
 *     The XHR Node Readable Stream
 */
proto.api.billingrule.v1.RuleClient.prototype.deleteRule =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/api.billingrule.v1.Rule/DeleteRule',
      request,
      metadata || {},
      methodDescriptor_Rule_DeleteRule,
      callback);
};


/**
 * @param {!proto.api.billingrule.v1.DeleteRuleRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.api.billingrule.v1.DeleteRuleReply>}
 *     Promise that resolves to the response
 */
proto.api.billingrule.v1.RulePromiseClient.prototype.deleteRule =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/api.billingrule.v1.Rule/DeleteRule',
      request,
      metadata || {},
      methodDescriptor_Rule_DeleteRule);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.api.billingrule.v1.GetRuleRequest,
 *   !proto.api.billingrule.v1.GetRuleReply>}
 */
const methodDescriptor_Rule_GetRule = new grpc.web.MethodDescriptor(
  '/api.billingrule.v1.Rule/GetRule',
  grpc.web.MethodType.UNARY,
  proto.api.billingrule.v1.GetRuleRequest,
  proto.api.billingrule.v1.GetRuleReply,
  /**
   * @param {!proto.api.billingrule.v1.GetRuleRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.api.billingrule.v1.GetRuleReply.deserializeBinary
);


/**
 * @param {!proto.api.billingrule.v1.GetRuleRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.api.billingrule.v1.GetRuleReply)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.api.billingrule.v1.GetRuleReply>|undefined}
 *     The XHR Node Readable Stream
 */
proto.api.billingrule.v1.RuleClient.prototype.getRule =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/api.billingrule.v1.Rule/GetRule',
      request,
      metadata || {},
      methodDescriptor_Rule_GetRule,
      callback);
};


/**
 * @param {!proto.api.billingrule.v1.GetRuleRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.api.billingrule.v1.GetRuleReply>}
 *     Promise that resolves to the response
 */
proto.api.billingrule.v1.RulePromiseClient.prototype.getRule =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/api.billingrule.v1.Rule/GetRule',
      request,
      metadata || {},
      methodDescriptor_Rule_GetRule);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.api.billingrule.v1.ListRuleRequest,
 *   !proto.api.billingrule.v1.ListRuleReply>}
 */
const methodDescriptor_Rule_ListRule = new grpc.web.MethodDescriptor(
  '/api.billingrule.v1.Rule/ListRule',
  grpc.web.MethodType.UNARY,
  proto.api.billingrule.v1.ListRuleRequest,
  proto.api.billingrule.v1.ListRuleReply,
  /**
   * @param {!proto.api.billingrule.v1.ListRuleRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.api.billingrule.v1.ListRuleReply.deserializeBinary
);


/**
 * @param {!proto.api.billingrule.v1.ListRuleRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.api.billingrule.v1.ListRuleReply)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.api.billingrule.v1.ListRuleReply>|undefined}
 *     The XHR Node Readable Stream
 */
proto.api.billingrule.v1.RuleClient.prototype.listRule =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/api.billingrule.v1.Rule/ListRule',
      request,
      metadata || {},
      methodDescriptor_Rule_ListRule,
      callback);
};


/**
 * @param {!proto.api.billingrule.v1.ListRuleRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.api.billingrule.v1.ListRuleReply>}
 *     Promise that resolves to the response
 */
proto.api.billingrule.v1.RulePromiseClient.prototype.listRule =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/api.billingrule.v1.Rule/ListRule',
      request,
      metadata || {},
      methodDescriptor_Rule_ListRule);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.api.billingrule.v1.ChargeRequest,
 *   !proto.api.billingrule.v1.ChargeReply>}
 */
const methodDescriptor_Rule_Charge = new grpc.web.MethodDescriptor(
  '/api.billingrule.v1.Rule/Charge',
  grpc.web.MethodType.UNARY,
  proto.api.billingrule.v1.ChargeRequest,
  proto.api.billingrule.v1.ChargeReply,
  /**
   * @param {!proto.api.billingrule.v1.ChargeRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.api.billingrule.v1.ChargeReply.deserializeBinary
);


/**
 * @param {!proto.api.billingrule.v1.ChargeRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.api.billingrule.v1.ChargeReply)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.api.billingrule.v1.ChargeReply>|undefined}
 *     The XHR Node Readable Stream
 */
proto.api.billingrule.v1.RuleClient.prototype.charge =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/api.billingrule.v1.Rule/Charge',
      request,
      metadata || {},
      methodDescriptor_Rule_Charge,
      callback);
};


/**
 * @param {!proto.api.billingrule.v1.ChargeRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.api.billingrule.v1.ChargeReply>}
 *     Promise that resolves to the response
 */
proto.api.billingrule.v1.RulePromiseClient.prototype.charge =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/api.billingrule.v1.Rule/Charge',
      request,
      metadata || {},
      methodDescriptor_Rule_Charge);
};


module.exports = proto.api.billingrule.v1;

